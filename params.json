{"name":"Meeko","tagline":"A platform for implementing component-based systems and data analysis","body":"### Welcome to Meeko.\r\nMeeko is a tiny single-node platform as a service that makes it very easy to build systems that consist of multiple components (in this case processes) that communicate with each other. The platform exports various services that the components (called *agents*) can use to exchange data. Each service implements one of the popular communication patters, e.g. publish-subscribe or request-reply, or some other functionality that is useful for the agents.\r\n\r\nThe platform consists of three basic component:\r\n\r\n* [meekod](https://github.com/meeko/meekod) is the core component (process) that contains the component supervisor and communication broker.\r\n* [meeko](https://github.com/meeko/meeko) is a command line management utility that can be used to install new components into the system, then configure and start them.\r\n* [go-meeko](http://godoc.org/github.com/meeko/go-meeko/agent) is the Go client library that can be used by the components to connect to all the communication services. It makes the communication very simple and friendly.\r\n\r\n### Demo\r\n\r\n```\r\n$ meeko install \\\\\r\n    git+https://github.com/meeko-contrib/meeko-collector-github \\\\\r\n    as gh-collector\r\n>>> Creating the agent workspace ... OK\r\n>>> Cloning the agent repository ...  \r\nCloning into '/var/lib/meeko/workspace/gh-collector/_stage'...\r\n<<< OK \r\n>>> Reading agent.json ... OK \r\n>>> Validating agent.json ... OK \r\n>>> Moving files into place ... OK \r\n>>> Running the install hook ...  \r\n+ godep go install -v\r\ngithub.com/meeko-contrib/go-meeko-webhook-receiver/receiver/server\r\ngithub.com/meeko/go-meeko/meeko/services\r\ngithub.com/meeko/go-meeko/meeko/services/logging\r\ngithub.com/cihub/seelog\r\ngithub.com/tchap/go-patricia/patricia\r\ngithub.com/meeko/go-meeko/meeko/services/pubsub\r\ngithub.com/meeko/go-meeko/meeko/services/rpc\r\ngithub.com/dmotylev/nutrition\r\ngithub.com/pebbe/zmq3\r\ngithub.com/meeko/go-meeko/meeko/transports/zmq3/logging\r\ngithub.com/meeko/go-meeko/meeko/transports/zmq3/loop\r\ngithub.com/ugorji/go/codec\r\ngithub.com/meeko/go-meeko/meeko/utils/codecs\r\ngithub.com/meeko/go-meeko/meeko/transports/zmq3/pubsub\r\ngithub.com/meeko/go-meeko/meeko/transports/zmq3/rpc\r\ngithub.com/meeko/go-meeko/agent\r\ngithub.com/meeko-contrib/go-meeko-webhook-receiver/receiver\r\ngithub.com/meeko-contrib/meeko-collector-github/handler\r\ngithub.com/meeko-contrib/meeko-collector-github\r\n<<< OK \r\n>>> Inserting the agent database record ... OK \r\n\r\nSuccess \r\n$ meeko info gh-collector\r\nAlias:          gh-collector\r\nName:           meeko-collector-github\r\nVersion:        0.0.1\r\nDescription:    Meeko collector for GitHub events\r\nRepository:     git+https://github.com/meeko-contrib/meeko-collector-github\r\nVariables:\r\n                Name:   LISTEN_ADDRESS\r\n                Usage:  TCP network address to listen on; format HOST:PORT\r\n                Type:   string\r\n                Value:  unset\r\n\r\n                Name:   ACCESS_TOKEN\r\n                Usage:  token to be used for hooks authentication\r\n                Type:   string\r\n                Value:  unset\r\n\r\n# Listen on localhost because we are behind Nginx.\r\n$ meeko set LISTEN_ADDRESS for gh-collector to localhost:8888\r\n\r\nSuccess\r\n$ meeko set -ask ACCESS_TOKEN for gh-collector\r\nInsert the value of ACCESS_TOKEN: \r\n\r\nSuccess\r\n$ meeko start -watch gh-collector\r\n>>> Streaming logs for agent gh-collector\r\n[INFO] Logging service initialised\r\n[INFO] PubSub service initialised\r\n[INFO] RPC service initialised\r\n[INFO] Forwarding github.issues\r\n```","google":"UA-51215145-1","note":"Don't delete this file! It's used internally to help with page regeneration."}